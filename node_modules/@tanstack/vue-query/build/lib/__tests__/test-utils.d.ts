export declare function flushPromises(timeout?: number): Promise<unknown>;
export declare function simpleFetcher(): Promise<string>;
export declare function getSimpleFetcherWithReturnData(returnData: unknown): () => Promise<unknown>;
export declare function infiniteFetcher({ pageParam, }: {
    pageParam?: number;
}): Promise<string>;
export declare function rejectFetcher(): Promise<Error>;
export declare function successMutator<T>(param: T): Promise<T>;
export declare function errorMutator<T>(_: T): Promise<Error>;
export declare type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? true : false;
export declare type Expect<T extends true> = T;
export declare const doNotExecute: (_func: () => void) => boolean;
//# sourceMappingURL=test-utils.d.ts.map